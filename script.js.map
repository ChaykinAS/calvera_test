{"version":3,"sources":["script.jsx"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe;AACd,QAAO;AACN,QAAM,YAAN;AACA,QAAM,YAAN;EAFD;CADD;;;;AASA,IAAI,OAAO,MAAM,WAAN,CAAkB;;;;AAE5B,kBAAiB,2BAAW;AAC3B,SAAO;AACN,OAAI,IAAJ;GADD,CAD2B;EAAX;;AAMjB,oBAAmB,6BAAW;;AAE7B,MAAI,OAAO,IAAP,CAFyB;AAG7B,UAAQ,CAAC,gBAAD,CAAR,EAA4B,UAAS,EAAT,EAAa;AACxC,QAAK,QAAL,CAAc;AACb,QAAI,EAAJ;IADD,EADwC;GAAb,CAA5B,CAH6B;EAAX;;AAUnB,SAAQ,kBAAW;AAClB,MAAI,CAAC,KAAK,KAAL,CAAW,EAAX,EAAe;;AAEnB,UACC,6BAAK,WAAU,8BAAV,EAAL,CADD,CAFmB;GAApB,MAKO;;AAEN,UACC;;MAAK,WAAU,oBAAV,EAAL;IACC,oBAAC,IAAD,IAAM,MAAM,KAAK,KAAL,CAAW,EAAX,EAAZ,CADD;IADD,CAFM;GALP;EADO;CAlBE,CAAP;;;;;AAuCJ,IAAI,OAAO,MAAM,WAAN,CAAkB;;;;AAE5B,kBAAiB,2BAAW;AAC3B,SAAO;AACN,SAAM,IAAN;GADD,CAD2B;EAAX;;AAMjB,kBAAiB,2BAAW;AAC3B,SAAO;AACN,aAAU,KAAV;GADD,CAD2B;EAAX;;;AAOjB,eAAc,sBAAS,CAAT,EAAY;AACzB,IAAE,cAAF,GADyB;AAEzB,OAAK,QAAL,CAAc;AACb,aAAU,CAAC,KAAK,KAAL,CAAW,QAAX;GADZ,EAFyB;EAAZ;;AAOd,SAAQ,kBAAW;AAClB,MAAI,OAAO,KAAK,KAAL,CAAW,IAAX,CADO;AAElB,MAAI,CAAC,IAAD,EAAO;AACV,UAAO,EAAP,CADU;GAAX,MAEO,IAAI,KAAK,IAAL,KAAc,CAAd,EAAiB;;AAE3B,OAAI,WAAW,KAAK,KAAL,CAAW,QAAX,CAFY;AAG3B,OAAI,eAAe;;MAAM,WAAU,sBAAV,EAAN;;IAAf,CAHuB;AAI3B,OAAI,KAAK,QAAL,CAAc,MAAd,EAAsB;AACzB,mBAAe,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAU,SAAV,EAAqB,CAArB,EAAwB;AACxD,YAAO,oBAAC,IAAD,IAAM,MAAM,SAAN,EAAiB,KAAK,CAAL,EAAvB,CAAP,CADwD;KAAxB,CAAjC,CADyB;IAA1B;AAKA,UACC;;MAAK,WAAW,2BAA2B,WAAU,SAAV,GAAsB,EAAtB,CAA3B,EAAhB;IACC;;OAAK,WAAU,kBAAV,EAA6B,SAAS,KAAK,YAAL,EAA3C;KACE,KAAK,IAAL;KAFH;IAIC;;OAAK,WAAW,eAAe,KAAK,QAAL,CAAc,MAAd,GAAsB,EAAtB,GAA2B,UAA3B,CAAf,EAAhB;KACE,YADF;KAJD;IADD,CAT2B;GAArB,MAmBA,IAAI,KAAK,IAAL,KAAc,CAAd,EAAiB;;AAE3B,UACC;;MAAK,WAAU,qBAAV,EAAL;IACC;;OAAK,WAAU,kBAAV,EAAL;KACE,KAAK,IAAL;KAFH;IADD,CAF2B;GAArB,MASA;AACN,UAAO,EAAP,CADM;GATA;EAvBA;CAtBE,CAAP;;AA6DJ,SAAS,MAAT,CAAgB,oBAAC,IAAD,OAAhB,EAA0B,SAAS,cAAT,CAAwB,MAAxB,CAA1B","file":"script.js","sourcesContent":["require.config({\r\n\tpaths: {\r\n\t\ttext: './lib/text',\r\n\t\tjson: './lib/json'\r\n\t}\r\n});\r\n\r\n// Контейнер для списка файлов\r\n// В state.fs передаётся содержимое json-файла\r\nvar Tree = React.createClass({\r\n\r\n\tgetInitialState: function() {\r\n\t\treturn {\r\n\t\t\tfs: null\r\n\t\t};\r\n\t},\r\n\r\n\tcomponentDidMount: function() {\r\n\t\t// Загрузка json-файла и обновление списка\r\n\t\tvar self = this;\r\n\t\trequire(['json!./fs.json'], function(fs) {\r\n\t\t\tself.setState({\r\n\t\t\t\tfs: fs\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\trender: function() {\r\n\t\tif (!this.state.fs) {\r\n\t\t\t// json-файл ещё не загружен\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tree-folder m-open m-loading\"></div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t// отрисовка содержимого json-файла\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tree-folder m-open\">\r\n\t\t\t\t\t<Item data={this.state.fs} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n// Компонент для каждого элемента в списке файлов\r\n// Информация об элементе передаётся в props.data\r\n// От state.expanded зависит показано ли содержание папки\r\nvar Item = React.createClass({\r\n\r\n\tgetDefaultProps: function() {\r\n\t\treturn {\r\n\t\t\tdata: null\r\n\t\t};\r\n\t},\r\n\r\n\tgetInitialState: function() {\r\n\t\treturn {\r\n\t\t\texpanded: false\r\n\t\t};\r\n\t},\r\n\r\n\t// разворачивание и сворачивание содержимого папки\r\n\ttoggleExpand: function(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\texpanded: !this.state.expanded\r\n\t\t});\r\n\t},\r\n\r\n\trender: function() {\r\n\t\tvar data = this.props.data;\r\n\t\tif (!data) {\r\n\t\t\treturn '';\r\n\t\t} else if (data.type === 0) {\r\n\t\t\t// папка\r\n\t\t\tvar expanded = this.state.expanded;\r\n\t\t\tvar childrenList = <span className=\"tree-item_empty-text\">Пустая папка</span>;\r\n\t\t\tif (data.children.length) {\r\n\t\t\t\tchildrenList = data.children.map(function (childData, i) {\r\n\t\t\t\t\treturn <Item data={childData} key={i}/>;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div className={'tree-item tree-folder' + (expanded? ' m-open' : '')}>\r\n\t\t\t\t\t<div className=\"tree-item_header\" onClick={this.toggleExpand}>\r\n\t\t\t\t\t\t{data.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={'tree-list' + (data.children.length? '' : ' m-empty')}>\r\n\t\t\t\t\t\t{childrenList}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (data.type === 1) {\r\n\t\t\t// файл\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tree-item tree-file\">\r\n\t\t\t\t\t<div className=\"tree-item_header\">\r\n\t\t\t\t\t\t{data.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nReactDOM.render(<Tree />, document.getElementById('tree'));"]}